// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../network.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

String startDiscovery() => RustLib.instance.api.crateApiNetworkStartDiscovery();

String stopDiscovery() => RustLib.instance.api.crateApiNetworkStopDiscovery();

NetworkStats getNetworkStats() => RustLib.instance.api.crateApiNetworkGetNetworkStats();

List<PeerData> getConnectedPeers() => RustLib.instance.api.crateApiNetworkGetConnectedPeers();

String connectToPeer({required String peerAddress}) =>
    RustLib.instance.api.crateApiNetworkConnectToPeer(peerAddress: peerAddress);

String disconnectFromPeer({required String peerId}) =>
    RustLib.instance.api.crateApiNetworkDisconnectFromPeer(peerId: peerId);

bool isNetworkActive() => RustLib.instance.api.crateApiNetworkIsNetworkActive();

String getMyNetworkAddress() => RustLib.instance.api.crateApiNetworkGetMyNetworkAddress();

BigInt pingPeer({required String peerId}) => RustLib.instance.api.crateApiNetworkPingPeer(peerId: peerId);

String setNetworkConfig({required int maxPeers, required int port}) =>
    RustLib.instance.api.crateApiNetworkSetNetworkConfig(maxPeers: maxPeers, port: port);
